version: '3.5'
services:
  traefik:
    container_name: traefik
    image: traefik
    command: --web --docker --docker.domain=${TRAEFIK_DOMAIN} --logLevel=DEBUG
    restart: always
    networks:
      - web
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - /dev/null:/traefik.toml

  server:
    build:
      context: .
      dockerfile: Dockerfile
    image: magic8bot
    depends_on:
      - mongodb
    volumes:
      - /app
    networks:
      - web
      - internal
    labels: 
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:${TRAEFIK_HOST_M8B}"
      - "traefik.frontend.auth.basic=${BASIC_AUTH_M8B}"
    environment:
      - MONGODB_PORT_27017_TCP_ADDR=mongodb

  mongodb:
    image: mongo:latest
    volumes:
      - database:/data/db
    command: mongod --smallfiles --bind_ip=0.0.0.0 --logpath=/dev/null
    expose:
      - 27017
    networks: 
      - internal
    labels:
      - "traefik.enable=false"

# AdminMongo is a Web based user interface for MongoDB administration
# This configuration is not safe for production use
  adminmongo:
    image: mrvautin/adminmongo
    links:
      - mongodb
    networks:
      - web
      - internal
    ports:
      - "1234:1234" # Danger this bypasses traefik routing to avoid password and login
    expose:
      - 1234
    labels:
      - "traefik.backend=adminmongo"
      - "traefik.docker.network=${TRAEFIK_NETWORK}"
      - "traefik.frontend.rule=Host:${TRAEFIK_HOST_DB}"
      - "traefik.enable=true"
      - "traefik.frontend.auth.basic=${BASIC_AUTH_DB}"
      - "traefik.port=1234"
    environment:
      - CONN_NAME=magic8bot_mongodb
      - DB_HOST=mongodb
      - DB_PORT=27017
    command: "npm start"

volumes: 
  database:

networks:
  web:
    driver: bridge
  internal:
    external: false
